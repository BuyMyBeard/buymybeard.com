{
  "@metadata": {
    "author": "BuyMyBeard",
    "last-updated": "2024-08-08",
    "locale": "fr"
  },
  "light": "Clair",
  "dark": "Sombre",
  "home": "Accueil",
  "game-jams": "Game Jams",
  "other-projects": "Projets divers",
  "animation": "Animation",
  "technical-art": "Art technique",
  "programming": "Programmation",
  "my-github-profile": "Mon profil GitHub",
  "contact-me": "Me contacter",
  "broadphase-title": "Phase large de moteur physique",
  "language": "Langage",
  "project": "Projet",
  "source-code": "Code source",
  "home-title": "Portfolio de BuyMyBeard",
  "home-p1": "Hey, je suis <b>Alexandre \"BuyMyBeard\" Lacombe</b>, et je développe des jeux!",
  "home-p2": "J'ai récemment occupé le poste de Tech Lead chez DevXpress, où je dirigeais le développement full stack. J’ai complété un diplôme en Techniques de l’informatique au Collège Lionel-Groulx, et je suis actuellement à la recherche de nouvelles opportunités.",
  "home-p3": "En plus de mon travail, je programme récréationnellement en participant à des Game Jams et en entreprenant des projets personnels. J'ai remporté la <b>1<sup>ère</sup> place</b> pour la catégorie open-source de Gamedev.js 2023 et était <a href=\"https://github.blog/2023-06-21-gamedev-js-2023/\">en vedette sur Le GitHub Blog</a>!",
  "home-p4": "Je suis à la recherche d'opportunités dans l'industrie du jeu vidéo, principalement en programmation de gameplay. Additionellement, je m'autoforme sur différentes disciplines de tech-art dans le but de devenir un artiste technique dans le futur!",
  "game-jams-p1": "Vous pouvez visionner la vidéo de démonstration de tous les jeux de jam que j'ai fait en 2022-2023!",
  "game-jams-nav-header": "Jeux (en ordre chronologique inverse)",
  "made-in": "Fait en",
  "weeks-for": "semaines pour",
  "days-for": "jours pour",
  "hours-for": "heures pour",
  "theme": "Thème",
  "team-size": "Taille de l'équipe",
  "download": "Télécharger",
  "play-in-browser": "Jouer dans le navigateur",
  "spectra-hunt-p1": "Ce jam m'a permis d'apprendre le rigging 3D et à animer des quadrupèdes dans <b>Blender</b>, puis créer des cinématiques avec la Unity Timeline. J'ai aussi eu l'occasion d'expérimenter avec des nuanceurs et des effets visuels pour créer un magnifique environnement bas-poly avec ombrage plat.",
  "spectra-hunt-p2": "Je suis particulièrement fier des nuages dynamiques, qui projettent de l'ombre se déplaçant sur le monde, ainsi que le nuanceur d'eau avec réflections planaires.",
  "homework-havoc-p1": "Ce jam a été développé avec Phaser 3 et TypeScript, et a été le premier jam où j'ai produit mes propres effets sonores. J'ai aussi produit mes propres ressources de texture 2D, ce que j'ai fait la dernière fois pour <a href=\"#dazel-the-gazelle\">Dazel the Gazelle</a>",
  "homework-havoc-p2": "Le plus grand défi lors de ce jam a été le système de pile pour les éléments interactifs. Le système est légèrement inspiré du système trouvé dans <a href=\"https://papersplea.se/\">Papers, Please</a>, mais la différence majeure est que plutôt que les objets soient mis au sommet de la pile suite à une interaction, il faut les faufiler au travers des autres objets pour les sortir.",
  "official-website-french-only": "Site officiel",
  "neon-souls-p1": "Projet d'intégration de ma formation au collège Lionel-Groulx, développé en équipe de 4 pendant une durée de 11 semaines. Le jeu incorpore les mécaniques de combat typique d'un jeu style Souls, avec une variété de comportements enemis, la gestion de la vie et de l'endurance, des améliorations, un monde explorable, ainsi qu'un double boss pour tester les compétences du joueur.",
  "playground-with-input-mapping": "<a href=\"https://buymybeard.github.io/pixi-physics/\">Démonstration interactive</a> avec <a href=\"https://github.com/BuyMyBeard/pixi-physics/blob/main/TestingInputs.md\">contrôles</a>",
  "pixi-physics-p1": "pixi-physics est un moteur physique et un module pour le <a href=\"https://pixijs.com/\">moteur graphique 2D Pixijs</a>.",
  "pixi-physics-p2": "Le moteur supporte la détection de collision et les réponses physiques entre les corps rigides en forme de cercle ou de polygone. Les corps peuvent avoir leur propre friction et restitution, être statique, et il est possible d'intercepter les événements de collisions.",
  "pixi-physics-p3": "Le mouvement sur l'axe des x et des y ainsi que la rotation peut être bloquée, et des forces et impulsions peuvent être appliquées sur les corps. Il existe aussi un système de couches, permettant d'ignorer les interactions entre certains corps.",
  "pixi-physics-p4": "Le moteur supporte plusieurs algorithmes de phase large :",
  "uniform-grid-partitioning": "<a href=\"https://en.wikipedia.org/wiki/Space_partitioning\">partitionement en grille uniforme</a>",
  "kd-tree": "<a href=\"https://fr.wikipedia.org/wiki/Arbre_kd\">arbre k-dimensionel</a>",
  "test-in-browser": "Tester dans le navigateur",
  "star-pattern-p1": "Une récréation du fond d'étoiles animées trouvé dans Persona 5. L'effet est accompli à l'aide d'un programme de nuanceur de fragment, et <a href=\"https://pixijs.com\">Pixijs</a> permet d'instancier ce matériel appliqué à plusieurs sprites avec différentes couleurs partout sur l'écran.",
  "model-viewer-instructions": "Tous les modèles sur cette page sont interactifs. Il est possible de déplacer et zoom la caméra en appuyant dans les canvas, puis de contrôler les animations avec l'interface à gauche.",
  "arctic-fox": "Renard polaire",
  "white-hare": "Lièvre blanc",
  "swordsman-player": "Joueur épéiste",
  "swordsman-enemy": "Ennemi épéiste",
  "ranged-enemy": "Ennemi tireur",
  "arctic-fox-p1": "Ce modèle a été weight-painted, riggé et animé pour <a href=\"./game-jams.html#spectra-hunt\">Spectra Hunt</a>. C'était ma première tentative à animer un quadrupède, et l'aspect le plus difficile était de comprendre l'anatomie d'un mammifère.",
  "arctic-fox-p2": "Pour l'animer, j'ai visionné à répétition des séquences vidéos de renarches marchant et courant au ralenti à une vitesse de 0,25x. Quelques animations procédurales ont été ajoutées directement dans Unity pour lui donner vie.",
  "white-hare-p1": "Ce modèle a été animé en conjonction avec le renard pour <a href=\"./game-jams.html#spectra-hunt\">Spectra Hunt</a>.",
  "white-hare-p2": "Un défi majeur pour ce modèle et celui du renard était le weight-painting. La difficulté avec les modèles bas poly est que les déformations peuvent être dégoûtantes si l'on ne porte pas attention. J'ai dû rajouter un peu de géométrie sur le lièvre pour le rendre déformable sans renverser le modèle à l'envers.",
  "swordsman-player-p1": "<a href=\"./other-projects.html#neon-souls\">Neon Souls</a> était un jeu très ambitieux. 90 clips d'animation ont été créé au total, partagé entre le joueur et les ennemis du jeu.",
  "swordsman-player-p2": "Le joueur était le point de départ, et je ne suis pas très fier de son cycle de marche. Par contre, d'autres clips, tel l'animation de roulade, ont été très bien réussies.",
  "swordsman-enemy-p1": "<a href=\"./other-projects.html#neon-souls\">Neon Souls</a> est un Soulslike, donc la variété d'ennemi est importante. Il n'était par réaliste de produire d'autres modèles riggés pour le jeu, alors le modèle a été réutilisé, mais avec des animations différentes. Cet ennemi a une pose différente du joueur, et possède même les attaques du boss, puisque ceux-ci ne sont que des variantes du modèle de l'ennemi avec des épées différentes.",
  "ranged-enemy-p1": "Finalement, un ennemi à portée a été ajouté au jeu pour forcer le joueur à approcher le combat différemment. Celui-ci défends sa position, et tire en direction du joueur périodiquement quand il le détecte. Il possèdes plusieurs attaques de corps-à-corps qu'il utilisera en retaliation si le joueur est suffisamment proche.",
  "potion-shader": "Nuanceur de potion",
  "health-bar-shader": "Nuanceur de barre de vie",
  "colorblind-filters": "Filtres de daltonisme",
  "light-pillars": "Pilliers de lumière",
  "water-shader": "Eau stylisée avec réflections planaires",
  "silhouette-toon-shading": "Silhouette de Persona avec nuanceur Toon",
  "rainbow-split-effect": "Effet de séparation arc-en-ciel",
  "dynamic-clouds": "Nuages dynamiques",
  "star-shader-effect": "Nuanceur d'étoile de Persona 5",
  "potion-shader-p1": "Cet effet a été utilisé dans <a href=\"./other-projects.html#neon-souls\">Neon Souls</a> afin de montrer au joueur combiens de potions il lui reste. Le nuanceur peut être contrôlé facilement afin de changer la couleur du liquide pour réfléter les différentes améliorations possibles, ou le niveau du liquide, comme dans l'exemple ci-haut.",
  "potion-shader-p2": "Le nuanceur a été créé en entier au travers de Shader Graph avec des <a href=\"https://fr.wikipedia.org/wiki/Fonction_distance_sign%C3%A9e\">fonctions distance signées</a> pour créer différentes formes, puis de la manipulation de bruit afin de produire les bulles.",
  "health-bar-shader-p1": "Ce nuanceur était aussi utilisé pour <a href=\"./other-projects.html#neon-souls\">Neon Souls</a> pour afficher chaque barre de ressource du jeu. Ci-haut est un exemple de l'utilisation pour afficher la vie, l'endurance et la magie du joueur, mais le nuanceur est aussi utilisé pour les barres de vie des ennemis et boss.",
  "colorblind-filters-p1": "J'accordais beaucoup d'importance à l'accessibilité pour Neon Souls, donc j'ai implémenté un filtre contrôlé par les menus pour compenser pour le daltonisme. Le filtre peut corriger la protanopie, la deuternaopie et la trinatopie en changeant les couleurs en post-traitement, puis la force du filtre peut être ajustée afin d'aider ceux qui souffrent de deuteranomalie, protanomalie et tritanomalie.",
  "light-pillars-p1": "Pour moi, il était important de donner des indices pour la location des objectifs au joueur dans <a href=\"other-projects.html#spectra-hunt\">Spectra Hunt</a>. L'approche utilisée ici est un cylindre qui augmente de taille et d'intensité lumineuse proportionnellement à la distance. Cette approche était très efficace et contribue très bien à la thème du jeu.",
  "water-shader-p1": "J'expérimente déjà depuis un instant avec des nuanceurs d'eau, donc il n'était pas sorcier du tout d'en implémenter un dans <a href=\"other-projects.html#spectra-hunt\">Spectra Hunt</a>. La touche finale était les réflections planaires de la surface de l'eau, avec l'aide de <a href=\"https://github.com/Kink3d/kMirrors\">kMirrors</a>.",
  "silhouette-toon-shader-p1": "Cet effet était une récréation du nuanceur de silhouette vu dans tous les jeux de Persona depuis Persona 5, et a servi de départ pour <a href=#rainbow-split>l'effet de séparation arc-en-ciel</a>. L'effet est possible grâce au <a href=\"https://en.wikipedia.org/wiki/Stencil_buffer\">stencil buffer</a>, pour toujours faire le rendu du modèle de Joker à l'avant du modèle dupliqué et non-éclairé, qui est en fait à la même profondeur que le premier modèle.",
  "rainbow-split-effect-p1": "Beaucoup d'expérimentation avec le stencil buffer et la file de rendu à mené à cet effet élégant.",
  "dynamic-clouds-p1": "J'ai expérimenté avec VFX Graph pour créer des nuages projetant leur ombres, et le résultat est plutôt cool. J'aimerai jouer avec les nuages pour leur donner un nuanceur de <a href=\"https://fr.wikipedia.org/wiki/Transluminescence\">transluminescence</a> pour leur donner plus de réalisme.",
  "star-shader-effect-p1": "J'ai recréé l'étoile grandissante de Persona 5, qui est utilisées dans les menus du jeu. C'était le point de départ pour créer le <a href=\"other-projects.html#star-pattern\">Star Pattern</a>.",
  "broadphase-p1": "Pour vous mettre en contexte, tous les moteurs physiques implémentent une phase large, ce qui permet d'éviter de vérifier s'il y a une collision entre chaque paire unique dans la simulation.",
  "broadphase-p2": "Dans mon implémentation, j'ai choisi principalement l'<a href=\"https://en.wikipedia.org/wiki/Sweep_and_prune\">algorithme Sweep and prune</a> pour ma simulation.",
  "broadphase-p3": "L'approche de cette algorithme est d'utiliser la boîte englobante alignée sur les axes (AABB) de chaque forme et de comparer les limites sur l'axe x. Si les deux corps se chevauchent, ils sont ajoutés dans un tableau qui est retourné à la fin du corps. Les formes sont premièrement triés par la limite gauche de leur boîte limitante, puis le tableau est balayé pour trouver un chevauchement.",
  "broadphase-p4": "Un aspect qui rend cette approche très efficace est que puisque un pas dans la simulation bouge la plupart des corps très peu, l'ordre est peu changé, et donc le tableau toujours presque trié. La méthode <code>Array.prototype.sort()</code>, bien qu'elle varie son implémentation d'un navigateur à l'autre, implémente en général l'<a href=\"https://fr.wikipedia.org/wiki/Timsort\">algorithme Timsort</a>, qui est idéal pour les tableaux sont déjà partiellement triées.",
  "broadphase-p5": "C'est pourquoi le tableau de corps est muté comme effet secondaire. De cette façon, le prochain pas dans la simulation peut réutiliser le tableau trié du pas précédent comme optimisation.",
  "parser-title": "Analyse syntaxique de ligne de commande",
  "parser-p1": "Cet extrait de code est une démonstration de l'analyseur syntaxique que j'ai écris en Rust pour la ligne de commande.",
  "parser-p2": "Ce que je crois rend cet exemple remarquable est l'utilisation judicieuse d'un itérateur de vecteur peekable Vec iterator pour envoyer en paramètre à <code>parse_flag()</code> le prochain argument sans avancer l'itérateur inutilemnent, et pour permettre de traiter les arguments optionels sur les flags.",
  "parser-p3": "Par exemple, la commande <code>head -n 5 ./README.md</code>, lorsque traduite, sais que <code>5</code> est un argument appartenant au flag <code>-n</code>.",
  "parser-p4": "<code>parse_flag()</code> retourne un tuple contenant un <b>Flag</b> et l'énumération <code>FlagArg</code>. Si le flag possède un argument, l'itérateur sautera par dessus avant d'analyser l'argument suivant.",
  "fr-exclusive-br": "<br>",
  "en-exclusive-br": " | "
}
